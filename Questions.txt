1- Вони бувають в таких 4 станах: 1)Untracked, 2)Unmodefiled, 3)Modefiled, 4)Steged.
2- Дана команда Команда git add додає вміст робочої директорії індекс (staging area) для наступного комміта.
3- Показує стан файлів в робочій деректорії також виводить підказки як змінити стан файлів.
4- Команда git commit бере всі дані, додані до індексу за допомогою git add, і зберігає їх зліпок у внутрішній базі даних, а потім зрушує покажчик поточної гілки на цей зліпок.
5- Команда "init" створює git репозиторії, а також директорію .git у поточній директорії.
6- Потрібно записати в коментаріях зміни які ми внесли.
7- Дана команда використовується для переходу між гілками.
8- Вона змінює покажчик HEAD та, опціонально, стан індексу.
   Також ця команда може змінити файли в робочій директорії при використанні параметра --hard, що може призвести до втрати напрацювань при неправильному використанні, тому переконайтеся в серйозності своїх намірів перш ніж використовувати його.
9- Команда git log використовується для перегляду історії коммітів, починаючи з найсвіжішого та йдучи до витоків проекту.
   За замовчуванням, вона показує лише історію поточної гілки, але може бути налаштована висновок історії інших, навіть кількох відразу, гілок. 
   Також її можна використовувати для перегляду відмінностей між гілками лише на рівні коммітів.
10- Використовується щоб побачити стан файлів.
11- Щоб відновити декілька файлів із попередньо створеного коміту, потрібно виконати команду "git ls-files -d".
12- Щоб перейти до попереднього коміта по імені, використовуйте команду "git checkout <ID коміту>".
13- git checkout, git branch.
14- Перейти на нову гілку, команда "git checkout /назва гілки".
15- Щоб перейти на основну гілку, використовуйте команду "git checkout master".
16- Щоб виконати злиття гілок, спочатку переходимо на основну гілку, а потім використовуємо команду "git merge".
